{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Desktop/react/appboilerplate/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Desktop/react/appboilerplate/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Desktop/react/appboilerplate/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Desktop/react/appboilerplate/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Desktop/react/appboilerplate/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Desktop/react/appboilerplate/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport history from '../../history';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    _classCallCheck(this, StreamDelete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamDelete).apply(this, arguments));\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this = this;\n\n      var id = this.props.match.params.id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.deleteStream(id);\n        },\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (!this.props.stream) {\n        return 'Are you sure you want to delete this stream?';\n      }\n\n      return \"Are you sure you want to replace this stream with title: \".concat(this.props.stream.title);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        title: \"Delete Stream\",\n        content: this.renderContent(),\n        actions: this.renderActions(),\n        onDismiss: function onDismiss() {\n          return history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  deleteStream: deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/matt/Desktop/react/appboilerplate/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","Link","connect","fetchStream","deleteStream","history","StreamDelete","props","match","params","id","stream","title","renderContent","renderActions","push","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAEMC,Y;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;oCAEe;AAAA;;AAAA,UACNA,EADM,GACC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MADlB,CACNC,EADM;AAEd,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACH,KAAL,CAAWH,YAAX,CAAwBM,EAAxB,CAAN;AAAA,SAAjB;AAAoD,QAAA,SAAS,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;;;oCAEe;AACd,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACtB,eAAO,8CAAP;AACD;;AAED,gFAAmE,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,KAArF;AACD;;;6BAEQ;AACP,aACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EAAE,KAAKC,aAAL,EAFX;AAGE,QAAA,OAAO,EAAE,KAAKC,aAAL,EAHX;AAIE,QAAA,SAAS,EAAE;AAAA,iBAAMT,OAAO,CAACU,IAAR,CAAa,GAAb,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;;EAhCwBhB,KAAK,CAACiB,S;;AAmCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAAER,IAAAA,MAAM,EAAEO,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,YAAY,EAAZA;AAAf,CAFoB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport history from '../../history';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const { id } = this.props.match.params\n    return (\n      <React.Fragment>\n        <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n        <Link to=\"/\" className=\"ui button\">Cancel</Link>\n      </React.Fragment>\n    )\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?'\n    }\n\n    return `Are you sure you want to replace this stream with title: ${this.props.stream.title}`\n  }\n\n  render() {\n    return (\n      <Modal \n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={() => history.push('/')}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(\n  mapStateToProps, \n  { fetchStream, deleteStream }\n)(StreamDelete);"]},"metadata":{},"sourceType":"module"}